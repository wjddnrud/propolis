<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.woo.infra.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.woo.infra.modules.member.Member"></resultMap>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT
			*
		FROM member
	</select>
	
	<resultMap id="resultMapObjSearch" type="com.woo.infra.modules.member.Member"></resultMap>
	
	<select id="search" resultMap="resultMapObjSearch">
		SELECT
			seq
			,id
			,password
			,name
			,dob
			,gender
			,job
			,zipcode
			,address
			,address_detail
			,telecom
			,phoneNumber
			,way_to_regist
			,createDate
			,lastLoginDate
			,delNY
		FROM member
		WHERE 1=1
		<!-- <if test="shDelNy != null and !shDelNy.equals('')">AND ifcgDelNy = #{shDelNy}</if> -->
		<choose>
			<when test="shGender == 1">AND gender LIKE 1</when>
			<when test="shGender == 2">AND gender LIKE 2</when>
			<when test="shGender == 3">AND gender LIKE 3</when>
		</choose>
		<choose>
			<when test="shTelecom == 1">AND telecom LIKE 1</when>
			<when test="shTelecom == 2">AND telecom LIKE 2</when>
			<when test="shTelecom == 3">AND telecom LIKE 3</when>
		</choose>
		<choose>
			<when test="shWayReg == 1">AND way_to_regist LIKE 1</when>
			<when test="shWayReg == 2">AND way_to_regist LIKE 2</when>
			<when test="shWayReg == 3">AND way_to_regist LIKE 3</when>
			<when test="shWayReg == 4">AND way_to_regist LIKE 4</when>
		</choose>
		<choose>
			<when test="shDate == 1"> AND createDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
			<when test="shDate == 2"> AND lastLoginDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
			<when test="shDate == 3"> AND dob BETWEEN #{shStartDate} AND #{shEndDate}</when>
		</choose>
		<choose>
			<when test="shDelNY == 1"> AND delNY LIKE 0</when>
			<when test="shDelNY == 2"> AND delNY LIKE 1</when>
		</choose>
		<choose>
			<when test="shOption == 1">AND seq LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 2">AND id LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND password LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 4">AND name LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 5">AND job LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 6">AND zipcode LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 7">AND address LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 8">AND address_detail LIKE CONCAT ('%',#{shValue},'%')</when>
			<when test="shOption == 9">AND phoneNumber LIKE CONCAT ('%',#{shValue},'%')</when>
		</choose>
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			seq
			,id
			,password
			,name
			,dob
			,gender
			,job
			,zipcode
			,address
			,address_detail
			,telecom
			,phoneNumber
			,way_to_regist
			,createDate
			,lastLoginDate
			,delNY
		FROM member
		WHERE 1=1
			AND seq = #{shSeq}
	</select>
	
	<insert id="insert">
		INSERT INTO member(
			id
			,password
			,name
			,dob
			,gender
			,job
			,zipcode
			,address
			,address_detail
			,telecom
			,phoneNumber
			,email
			,way_to_regist
		)
		VALUES (
			#{id}
			,#{password}
			,#{name}
			,#{dob}
			,#{gender}
			,#{job}
			,#{zipcode}
			,#{address}
			,#{address_detail}
			,#{telecom}
			,#{phoneNumber}
			,#{email}
			,#{way_to_regist}
		)
		;
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()   <!-- 새로 생성된 데이터가 몇번째인지 확인할수 있는 문구 출력 -->
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE member
		SET
			id = #{id}
			,password = #{password}
			,name = #{name}
			,dob = #{dob}
			,gender = #{gender}
			,job = #{job}
			,zipcode = #{zipcode}
			,address = #{address}
			,address_detail = #{address_detail}
			,telecom = #{telecom}
			,phoneNumber = #{phoneNumber}
			,way_to_regist = #{way_to_regist}
			,createDate = #{createDate}
			,lastLoginDate = #{lastLoginDate}
			,delNY = #{delNY}
		WHERE 1=1
			seq = #{shSeq}
	</update>
	
	<delete id="delete">
		DELETE
		FROM member
		WHERE 1=1
			AND seq = #{seq}
	</delete>
	
	
	
	
	<select id ="checkId" resultType="Integer">
		SELECT
			COUNT(*)
		FROM member
		WHERE 1=1
			AND id = #{id}
	</select>
	
	<!-- <select id="signIn" resultType="Integer">
		SELECT
			COUNT(*)
		FROM member
		WHERE 1=1
			AND id = #{id}
			AND password = #{password}
	</select> -->
	
	<select id="signIn2" resultMap="resultMapObj">
		SELECT
			seq
			,id
			,password
			,name
		FROM member
		WHERE 1=1
			AND id = #{id}
			AND password = #{password}
	</select>
	
	
	

</mapper>	